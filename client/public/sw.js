importScripts("/src/js/idb.js"),importScripts("/src/js/utility.js");const CACHE_STATIC_NAME="static-v0",CACHE_DYNAMIC_NAME="dynamic-v0",STATIC_FILES_TO_PRE_CATCH=["/","/index.html","/offline.html","/src/js/app.js","/src/js/feed.js","/src/js/idb.js","/src/js/utility.js","/src/js/promise.js","/src/js/fetch.js","/src/js/material.min.js","/src/css/app.css","/src/css/feed.css","/src/images/main-image.jpg"],URLS_TO_PRE_FETCH=["https://fonts.googleapis.com/css?family=Roboto:400,700","https://fonts.googleapis.com/icon?family=Material+Icons","https://cdnjs.cloudflare.com/ajax/libs/material-design-lite/1.3.0/material.indigo-pink.min.css"];self.addEventListener("install",t=>{t.waitUntil((async()=>{try{const t=await caches.open("static-v0");await t.addAll(STATIC_FILES_TO_PRE_CATCH),URLS_TO_PRE_FETCH.forEach(async a=>{try{const s=new Request(a,{mode:"no-cors"}),e=await fetch(s);await t.put(s,e)}catch(t){}})}catch(t){}})())}),self.addEventListener("activate",t=>(t.waitUntil((async()=>{try{const t=await caches.keys();await Promise.all(t.map(t=>{if("static-v0"!==t&&"dynamic-v0"!==t)return caches.delete(t)}))}catch(t){}})()),self.clients.claim())),self.addEventListener("fetch",t=>{t.request.url.indexOf(`${BACKEND_APP_URI}/posts`)>-1?t.respondWith((async()=>{try{const a=await fetch(t.request),s=a.clone();await clearAllData(POSTS_OBJECT_STORE);const e=await s.json();if(e.posts)for(const t of e.posts)await writeData(POSTS_OBJECT_STORE,t);return e.post&&await writeData(POSTS_OBJECT_STORE,e.post),a}catch(t){}})()):[...STATIC_FILES_TO_PRE_CATCH,...URLS_TO_PRE_FETCH].reduce((a,s)=>s.indexOf(t.request.url)>-1||a,!1)?t.respondWith(caches.match(t.request)):t.respondWith((async()=>{try{const a=await caches.match(t.request);if(a)return a;const s=await fetch(t.request),e=await caches.open("dynamic-v0");return await e.put(t.request.url,s.clone()),s}catch(a){try{if(t.request.headers.get("accept").includes("text/html")){const t=await caches.open("static-v0");return await t.match("/offline.html")}}catch(t){}}})())}),self.addEventListener("sync",t=>{t.tag===POSTS_SYNC_TAG&&t.waitUntil((async()=>{try{const t=await readAllData(POSTS_SYNC_OBJECT_STORE);for(const a of t){const t=new FormData;t.append("title",a.title),t.append("location",a.location),t.append("image",a.image,a.title+".png"),t.append("rawLocationLat",a.rawLocationLat),t.append("rawLocationLng",a.rawLocationLng);const s=await fetch(`${BACKEND_APP_URI}/posts`,{method:"POST",body:t}),{post:e}=await s.json();s.ok&&await deleteItemFromData(POSTS_SYNC_OBJECT_STORE,a.postNum)}}catch(t){}})())}),self.addEventListener("periodicsync",t=>{t.tag===POSTS_PERIODIC_SYNC_TAG&&t.waitUntil((async()=>{try{const t=await fetch(`${BACKEND_APP_URI}/posts`),a=await t.json();await clearAllData(POSTS_OBJECT_STORE);for(const t of a.posts)await writeData(POSTS_OBJECT_STORE,t)}catch(t){}})())}),self.addEventListener("notificationclick",t=>{const{notification:a,action:s}=t;s===CONFIRM_NOTIFICATION_CONFIRM_ACTION||t.waitUntil((async()=>{try{const t=(await clients.matchAll()).find(t=>"visible"===t.visibilityState);void 0!==t?(await t.navigate(a.data.url),t.focused||await t.focus()):await clients.openWindow(a.data.url)}catch(t){}})()),a.close()}),self.addEventListener("notificationclose",t=>{}),self.addEventListener("push",t=>{let a={title:"New!",content:"Something new happened!",openUrl:"/"};t.data&&(a=JSON.parse(t.data.text()));const s={body:a.content,icon:"/src/images/icons/app-icon-96x96.png",badge:"/src/images/icons/app-icon-96x96.png",data:{url:a.openUrl}};t.waitUntil(self.registration.showNotification(a.title,s))});