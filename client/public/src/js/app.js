let defferedPrompt;const enableNotificationsButtons=document.querySelectorAll(".enable-notifications");window.Promise||(window.Promise=Promise),"serviceWorker"in navigator&&(async()=>{try{await navigator.serviceWorker.register("/sw.js")}catch(i){}})(),window.addEventListener("beforeinstallprompt",i=>(i.preventDefault(),defferedPrompt=i,!1));const displayConfirmNotification=async()=>{if("serviceWorker"in navigator){const i={body:"You successfully subscribed to our Notification service!",icon:"/src/images/icons/app-icon-96x96.png",image:"/src/images/main-image.jpg",dir:"ltr",lang:"en-US",vibrate:[100,50,200],badge:"/src/images/icons/app-icon-96x96.png",tag:CONFIRM_NOTIFICATION_TAG,renotify:!0,actions:[{action:CONFIRM_NOTIFICATION_CONFIRM_ACTION,title:"Okay",icon:"/src/images/icons/app-icon-96x96.png"},{action:CONFIRM_NOTIFICATION_CANCEL_ACTION,title:"Cancel",icon:"/src/images/icons/app-icon-96x96.png"}]};try{const a=await navigator.serviceWorker.ready;await a.showNotification("Successfully Subscribed!",i)}catch(i){}}},configurePushSub=async()=>{if("serviceWorker"in navigator)try{const i=await navigator.serviceWorker.ready;if(null===await i.pushManager.getSubscription()){const a=urlBase64ToUint8Array(VAPID_PUBLIC_KEY),e=await i.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:a});(await fetch(`${BACKEND_APP_URI}/subscriptions`,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(e)})).ok&&await displayConfirmNotification()}}catch(i){}},askForNotificationPermission=i=>{(async()=>{try{"granted"!==await Notification.requestPermission()||await configurePushSub()}catch(i){}})()};"Notification"in window&&"serviceWorker"in navigator&&enableNotificationsButtons.forEach(i=>{i.style.display="inline-block",i.addEventListener("click",askForNotificationPermission)});